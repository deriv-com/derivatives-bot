{
  "lastUpdated": "2025-08-26T12:08:43.041Z",
  "totalMergedPRs": 17,
  "analyses": [
    {
      "percentage": 0,
      "totalCharacters": 661,
      "aiCharacters": 0,
      "files": [
        {
          "name": ".github/workflows/build-and-deploy-production.yml",
          "totalCharacters": 250,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "              uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4\n              uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610 # v3\n              uses: actions/cache/restore@638ed79f9dc94c1de1baef91bcab5edaa19451f4"
        },
        {
          "name": ".github/workflows/build-and-deploy-staging.yml",
          "totalCharacters": 250,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "              uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4\n              uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610 # v3\n              uses: actions/cache/restore@638ed79f9dc94c1de1baef91bcab5edaa19451f4"
        },
        {
          "name": ".github/workflows/claude.yml",
          "totalCharacters": 161,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4\n        uses: anthropics/claude-code-action@ada5bc42ebb031c1b30d9e12ec73cb7f978b4846"
        }
      ],
      "timestamp": "2025-08-26T12:08:42.992Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "28",
      "branch": "fix-workflow-version",
      "author": "prince-deriv",
      "prTitle": "chore: update version hashes",
      "hasAnalysis": true
    },
    {
      "percentage": 24,
      "totalCharacters": 79961,
      "aiCharacters": 19044,
      "files": [
        {
          "name": ".github/data/ai-analysis-history.json",
          "totalCharacters": 2963,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "  \"lastUpdated\": \"2025-08-21T10:53:03.927Z\",\n  \"totalMergedPRs\": 15,\n    {\n      \"percentage\": 61,\n      \"totalCharacters\": 818,\n      \"aiCharacters\": 503,\n      \"files\": [\n        {\n          \"name\": \"src/components/layout/header/account-switcher.scss\",\n          \"totalCharacters\": 58,\n          \"aiCharacters\": 54,\n          \"percentage\": 93,\n          \"status\": \"modified\",\n          \"hasAddedContent\": true,\n          \"addedContent\": \"    border-inline-end: 1px solid var(--general-section-1);\"\n..."
        },
        {
          "name": ".github/workflows/ai-dashboard.yml",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "only-deletions",
          "hasAddedContent": false,
          "addedContent": ""
        },
        {
          "name": "AI-DASHBOARD.md",
          "totalCharacters": 562,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "📅 Last updated: 2025-08-21 10:53:03 UTC • 🔄 Tracking merged PRs to main/master\n| **📁 Total Merged PRs** | 15 | **📈 Average AI Code** | 🟧🟧🟧⬜⬜⬜⬜⬜⬜⬜ 30% |\n| **🤖 PRs with AI Analysis** | 10 | **🎯 Overall AI Percentage** | 🟥⬜⬜⬜⬜⬜⬜⬜⬜⬜ 14% |\n| **📄 Files Analyzed** | 45 | **⚡ Total AI Characters** | 6,002 |\n> 📊 Showing the 10 most recent merged PRs (stats above include all 15 PRs)\n| [#16](#) **Prince/ Authentication flow improvements** | [@prince-deriv](https://github.com/prince-deriv) | 8/2..."
        },
        {
          "name": "package-lock.json",
          "totalCharacters": 11574,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                \"@deriv-com/derivatives-charts\": \"^1.0.5\",\n        \"node_modules/@deriv-com/derivatives-charts\": {\n            \"version\": \"1.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@deriv-com/derivatives-charts/-/derivatives-charts-1.0.5.tgz\",\n            \"integrity\": \"sha512-oJ2f2g+AdbanfUYkbIo+4PKCFY9sNMMy9fnbs3ZBEd/d8zXB+xnPIlgNBhU4tnyAddCzGItyNhppEmEPmM00rg==\",\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"@types/lodash.set\": \"^4.3.7\",\n       ..."
        },
        {
          "name": "package.json",
          "totalCharacters": 50,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        \"@deriv-com/derivatives-charts\": \"^1.0.5\","
        },
        {
          "name": "rsbuild.config.ts",
          "totalCharacters": 534,
          "aiCharacters": 384,
          "percentage": 72,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                from: 'node_modules/@deriv-com/derivatives-charts/dist/*',\n            { from: 'node_modules/@deriv-com/derivatives-charts/dist/chart/assets/*', to: 'assets/[name][ext]' },\n            {\n                from: 'node_modules/@deriv-com/derivatives-charts/dist/chart/assets/fonts/*',\n                to: 'assets/fonts/[name][ext]',\n            },\n            {\n                from: 'node_modules/@deriv-com/derivatives-charts/dist/chart/assets/shaders/*',\n                to: 'assets/sh..."
        },
        {
          "name": "src/app/app-content.jsx",
          "totalCharacters": 73,
          "aiCharacters": 73,
          "percentage": 100,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { setSmartChartsPublicPath } from '@deriv-com/derivatives-charts';"
        },
        {
          "name": "src/components/layout/header/account-switcher.scss",
          "totalCharacters": 58,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    border-inline-end: 1px solid var(--general-section-1);"
        },
        {
          "name": "src/components/layout/header/account-switcher.tsx",
          "totalCharacters": 409,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import React from 'react';\nimport { AccountSwitcher as UIAccountSwitcher } from '@deriv-com/ui';\nimport { TAccountSwitcher } from './common/types';\n        activeAccount && (\n            <UIAccountSwitcher\n                buttonClassName='account-switcher-fixed'\n                activeAccount={activeAccount}\n                isDisabled={true} // Force disabled to prevent interactions\n            />\n        )"
        },
        {
          "name": "src/components/layout/header/header.tsx",
          "totalCharacters": 137,
          "aiCharacters": 116,
          "percentage": 85,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    const { getCurrency, is_virtual } = client ?? {};\n                {isDesktop && client?.is_logged_in && <MenuItems.TradershubLink />}"
        },
        {
          "name": "src/components/layout/header/mobile-menu/use-mobile-menu-config.tsx",
          "totalCharacters": 95,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { BrandDerivLogoCoralIcon } from '@deriv/quill-icons';\n                is_logged_in && {"
        },
        {
          "name": "src/components/shared/services/trading-times-service.ts",
          "totalCharacters": 7932,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "class TradingTimesService {\n    private trading_times_cache: any = null;\n    private cache_expiry: number = 0;\n    private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\n    /**\n     * Get trading times data with caching\n     */\n    async getTradingTimes(): Promise<any> {\n        const now = Date.now();\n\n        // Return cached data if still valid\n        if (this.trading_times_cache && now < this.cache_expiry && this.trading_times_cache.markets) {\n            return this.trading_times_..."
        },
        {
          "name": "src/components/shared/utils/common-data.js",
          "totalCharacters": 23443,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "/**\n * Common Data Utilities\n *\n * This file contains centralized data constants and utility functions\n * to improve maintainability and provide consistent data across components.\n */\n\n// Trading Times Data\nexport const TRADING_TIMES = {\n    // Trading times for major symbols\n    SYMBOLS: [\n        // Forex - 24/5 markets\n        'frxEURUSD',\n        'frxGBPUSD',\n        'frxUSDJPY',\n        'frxAUDUSD',\n        'frxUSDCAD',\n        'frxUSDCHF',\n        'frxNZDUSD',\n        'frxEURGBP',\n        ..."
        },
        {
          "name": "src/components/shared/utils/contract/trade-url-params-config.ts",
          "totalCharacters": 150,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        const isSymbolValid = active_symbols.some(\n            item => (item as any).underlying_symbol === symbol || item.symbol === symbol\n        );"
        },
        {
          "name": "src/components/shared/utils/helpers/active-symbols.ts",
          "totalCharacters": 2611,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    // Handle both old and new field names for backward compatibility\n    const getSymbolField = (item: any) => item.underlying_symbol || item.symbol;\n    return active_symbols.filter(x => getSymbolField(x) === symbol)[0]\n        ? !active_symbols.filter(symbol_info => getSymbolField(symbol_info) === symbol)[0].exchange_is_open\n            active_symbols.find(\n                symbol_info =>\n                    (symbol_info as any).underlying_symbol === client_fav_symbol ||\n                    sy..."
        },
        {
          "name": "src/external/bot-skeleton/scratch/blocks/Binary/Trade Definition/trade_definition_tradeoptions.js",
          "totalCharacters": 2324,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { DURATIONS } from '../../../../../../components/shared/utils/common-data';\n            contracts_for\n                .getDurations(this.selected_symbol, this.selected_trade_type)\n                .then(durations => {\n                    // Use fallback if no durations received\n                    if (!durations || durations.length === 0) {\n                        durations = DURATIONS;\n                    }\n                    // Keep duration in memory so we can later reference them for ..."
        },
        {
          "name": "src/external/bot-skeleton/scratch/dbot.js",
          "totalCharacters": 1905,
          "aiCharacters": 838,
          "percentage": 44,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                        contracts_for\n                            ?.getTradeTypeCategories?.(market, submarket, symbol)\n                            .then(categories => {\n                                const category_field = this.getField('TRADETYPECAT_LIST');\n                                if (category_field) {\n                                    category_field.updateOptions(categories, {\n                                        default_value: category,\n                                        s..."
        },
        {
          "name": "src/external/bot-skeleton/scratch/shared.js",
          "totalCharacters": 876,
          "aiCharacters": 727,
          "percentage": 83,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { getContractTypeOptions as getContractTypeOptionsFromCommon } from '../../../components/shared/utils/common-data';\n    // First try to get from config\n    if (trade_type && trade_type !== 'na' && trade_type !== '') {\n        const trade_types = config().opposites[trade_type.toUpperCase()];\n        if (trade_types) {\n            const contract_options = trade_types.map(type => Object.entries(type)[0].reverse());\n            // When user selected a specific contract, only return the contra..."
        },
        {
          "name": "src/external/bot-skeleton/services/api/account-limits.js",
          "totalCharacters": 226,
          "aiCharacters": 208,
          "percentage": 92,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { getAccountLimits } from '../../../../components/shared/utils/common-data';\n\n        // Use common data instead of duplicating here\n        return getAccountLimits(currency, landing_company_shortcode, selected_market);"
        },
        {
          "name": "src/external/bot-skeleton/services/api/active-symbols.js",
          "totalCharacters": 2144,
          "aiCharacters": 1672,
          "percentage": 78,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { MARKET_OPTIONS, SUBMARKET_OPTIONS, SYMBOL_OPTIONS } from '../../../../components/shared/utils/common-data';\n        if (this.active_symbols.length === 0) {\n            return {};\n        }\n\n            // Handle both old and new field names for backward compatibility\n            const symbol_code = symbol.underlying_symbol || symbol.symbol;\n            const symbol_submarket = symbol.submarket;\n            const symbol_market = symbol.market;\n\n                config().DISABLED_SYMBOLS.i..."
        },
        {
          "name": "src/external/bot-skeleton/services/api/api-base.ts",
          "totalCharacters": 13024,
          "aiCharacters": 8856,
          "percentage": 68,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { tradingTimesService } from '../../../../components/shared/services/trading-times-service';\nimport { ACTIVE_SYMBOLS, generateDisplayName, MARKET_MAPPINGS } from '../../../../components/shared/utils/common-data';\n    active_symbols: any[] = [];\n    active_symbols_promise: Promise<any[] | undefined> | null = null;\n        const hasToken = V2GetActiveToken();\n\n        if (!this.has_active_symbols && !hasToken) {\n            this.active_symbols_promise = this.getActiveSymbols().then(() => un..."
        },
        {
          "name": "src/external/bot-skeleton/services/api/contracts-for.js",
          "totalCharacters": 2284,
          "aiCharacters": 1576,
          "percentage": 69,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { DURATIONS, TRADE_TYPE_CATEGORIES, TRADE_TYPES } from '../../../../components/shared/utils/common-data';\n        // Check if API is available\n        if (!api_base.api) {\n            return [];\n        }\n\n            try {\n                const response = await api_base.api.send({ contracts_for: symbol });\n\n                if (response.error) {\n                    this.retrieving_contracts_for[symbol].resolve();\n                    delete this.retrieving_contracts_for[symbol];\n          ..."
        },
        {
          "name": "src/external/bot-skeleton/services/api/trading-times.js",
          "totalCharacters": 3087,
          "aiCharacters": 1976,
          "percentage": 64,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { getTradingTimes, TRADING_TIMES } from '../../../../components/shared/utils/common-data';\nimport { api_base } from './api-base';\n        try {\n            // Check if API is available\n            if (!api_base.api && !this.ws) {\n                this.setTradingTimes();\n                return;\n            }\n            const response = await (api_base.api?.send({ trading_times: last_update_date }) ||\n                this.ws?.send({ trading_times: last_update_date }));\n            if (respo..."
        },
        {
          "name": "src/hooks/api/account/useActiveAccount.tsx",
          "totalCharacters": 144,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                        : addComma(parseFloat('0').toFixed(getDecimalPlaces(activeAccount.currency))), //  [AI] Format zero with proper decimals"
        },
        {
          "name": "src/pages/chart/chart.tsx",
          "totalCharacters": 398,
          "aiCharacters": 275,
          "percentage": 69,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { ChartTitle, SmartChart } from '@deriv-com/derivatives-charts';\nimport '@deriv-com/derivatives-charts/dist/smartcharts.css';\n                stateChangeListener={(state: string) => {\n                    // Handle state changes: INITIAL, READY, SCROLL_TO_LEFT\n                    if (state === 'READY') {\n                        setChartStatus(true);\n                    }\n                }}"
        },
        {
          "name": "src/pages/chart/toolbar-widgets.tsx",
          "totalCharacters": 251,
          "aiCharacters": 236,
          "percentage": 94,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { ChartMode, DrawTools, Share, StudyLegend, ToolbarWidget, Views } from '@deriv-com/derivatives-charts';\n    const validPosition = position === 'top' || position === 'bottom' ? position : 'top';\n\n        <ToolbarWidget position={validPosition}>"
        },
        {
          "name": "src/stores/chart-store.ts",
          "totalCharacters": 523,
          "aiCharacters": 403,
          "percentage": 77,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        const symbol =\n            market_block?.getFieldValue('SYMBOL_LIST') ??\n            (api_base?.active_symbols[0]\n                ? (api_base.active_symbols[0] as any).underlying_symbol || (api_base.active_symbols[0] as any).symbol\n                : undefined);\n    getMarketsOrder = (active_symbols: any[]) => {\n        if (!active_symbols || !Array.isArray(active_symbols)) {\n            return [synthetic_index];\n        }\n\n\n            .sort((a, b) => (a.display_name || '').localeCompare..."
        },
        {
          "name": "src/types/api-types.ts",
          "totalCharacters": 20,
          "aiCharacters": 16,
          "percentage": 80,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    balance: number;"
        },
        {
          "name": "src/types/derivatives-charts.d.ts",
          "totalCharacters": 2164,
          "aiCharacters": 1688,
          "percentage": 78,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "declare module '@deriv-com/derivatives-charts' {\n    import { ComponentType, ReactNode } from 'react';\n\n    export interface SmartChartProps {\n        id?: string;\n        barriers?: any[];\n        showLastDigitStats?: boolean;\n        chartControlsWidgets?: any;\n        enabledChartFooter?: boolean;\n        stateChangeListener?: (state: string, option?: any) => void;\n        chartStatusListener?: (status: boolean) => void;\n        toolbarWidget?: () => ReactNode;\n        chartType?: string;\n   ..."
        }
      ],
      "timestamp": "2025-08-25T08:28:55.230Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "21",
      "branch": "Rupato/Fix--active-symbols",
      "author": "rupato-deriv",
      "prTitle": "fix: active symbols to load blockly and chart",
      "hasAnalysis": true
    },
    {
      "percentage": 61,
      "totalCharacters": 818,
      "aiCharacters": 503,
      "files": [
        {
          "name": "src/components/layout/header/account-switcher.scss",
          "totalCharacters": 58,
          "aiCharacters": 54,
          "percentage": 93,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    border-inline-end: 1px solid var(--general-section-1);"
        },
        {
          "name": "src/components/layout/header/account-switcher.tsx",
          "totalCharacters": 409,
          "aiCharacters": 311,
          "percentage": 76,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import React from 'react';\nimport { AccountSwitcher as UIAccountSwitcher } from '@deriv-com/ui';\nimport { TAccountSwitcher } from './common/types';\n        activeAccount && (\n            <UIAccountSwitcher\n                buttonClassName='account-switcher-fixed'\n                activeAccount={activeAccount}\n                isDisabled={true} // Force disabled to prevent interactions\n            />\n        )"
        },
        {
          "name": "src/components/layout/header/header.tsx",
          "totalCharacters": 137,
          "aiCharacters": 67,
          "percentage": 49,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    const { getCurrency, is_virtual } = client ?? {};\n                {isDesktop && client?.is_logged_in && <MenuItems.TradershubLink />}"
        },
        {
          "name": "src/components/layout/header/mobile-menu/use-mobile-menu-config.tsx",
          "totalCharacters": 95,
          "aiCharacters": 17,
          "percentage": 18,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { BrandDerivLogoCoralIcon } from '@deriv/quill-icons';\n                is_logged_in && {"
        },
        {
          "name": "src/external/bot-skeleton/services/api/api-base.ts",
          "totalCharacters": 99,
          "aiCharacters": 54,
          "percentage": 55,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                      balance: authorize.balance,\n                      loginid: authorize.loginid,"
        },
        {
          "name": "src/types/api-types.ts",
          "totalCharacters": 20,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    balance: number;"
        }
      ],
      "timestamp": "2025-08-21T10:53:03.878Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "16",
      "branch": "core-authflow-improvements",
      "author": "prince-deriv",
      "prTitle": "Prince/ Authentication flow improvements",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 351,
      "aiCharacters": 0,
      "files": [
        {
          "name": "package-lock.json",
          "totalCharacters": 308,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                \"@deriv-com/shiftai-cli\": \"^0.0.6\",\n            \"version\": \"0.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/@deriv-com/shiftai-cli/-/shiftai-cli-0.0.6.tgz\",\n            \"integrity\": \"sha512-T5J4fNn3hM/nNAQyzL4yN2jWr0+xRlb7dsecPzX1lmPL/8vG4RfxPPSq7Ye+TMhi8W64NGalWZdlVx/bTJdiEg==\","
        },
        {
          "name": "package.json",
          "totalCharacters": 43,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        \"@deriv-com/shiftai-cli\": \"^0.0.6\","
        }
      ],
      "timestamp": "2025-08-21T09:11:49.671Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "19",
      "branch": "update-shiftai-cli-version",
      "author": "prince-deriv",
      "prTitle": "Prince/update shai version",
      "hasAnalysis": true
    },
    {
      "percentage": 84,
      "totalCharacters": 425,
      "aiCharacters": 357,
      "files": [
        {
          "name": "jest.setup.ts",
          "totalCharacters": 180,
          "aiCharacters": 149,
          "percentage": 83,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "\n// Mock fetch for tests\nglobal.fetch = jest.fn(() =>\n    Promise.resolve({\n        ok: true,\n        json: () => Promise.resolve({ is_tmb_enabled: false }),\n    })\n) as jest.Mock;"
        },
        {
          "name": "src/components/layout/header/mobile-menu/__tests__/menu-content.spec.tsx",
          "totalCharacters": 245,
          "aiCharacters": 208,
          "percentage": 85,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    // Mock client as logged in to show Hub link\n    mock_store.client.is_logged_in = true;\n\n        expect(screen.getByText(/Hub/)).toBeInTheDocument();\n        const text = screen.getByText(/Hub/);\n        const text = screen.getByText(/Hub/);"
        }
      ],
      "timestamp": "2025-08-21T07:51:25.997Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "17",
      "branch": "fix-test-issues",
      "author": "prince-deriv",
      "prTitle": "Prince/ Fix test issues",
      "hasAnalysis": true
    },
    {
      "timestamp": "2025-08-21T05:27:09.045Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "14",
      "branch": "matin/gh_workflows_cleanup",
      "author": "matin-deriv",
      "prTitle": "chore: Clean-up GH Workflows for Staging & Production Deployments",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    },
    {
      "percentage": 31,
      "totalCharacters": 8622,
      "aiCharacters": 2649,
      "files": [
        {
          "name": "src/app/CoreStoreProvider.tsx",
          "totalCharacters": 313,
          "aiCharacters": 160,
          "percentage": 51,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { toMoment } from '@/components/shared';\n                if (balance && typeof balance.balance === 'number') {\n                    client.setBalance(balance.balance.toString());\n\n                    if (balance.currency) {\n                        client.setCurrency(balance.currency);\n                    }"
        },
        {
          "name": "src/components/layout/header/AccountSwitcherWallet/account-switcher-wallet-item.tsx",
          "totalCharacters": 57,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "            localStorage.setItem('session_token', token);"
        },
        {
          "name": "src/components/layout/header/AccountSwitcherWallet/account-switcher-wallet-mobile.tsx",
          "totalCharacters": 146,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { handleTraderHubRedirect } from '@/utils/traders-hub-redirect';\n    ({ is_visible, toggle, residence }: TAccountSwitcherWalletMobile) => {"
        },
        {
          "name": "src/components/layout/header/account-switcher.tsx",
          "totalCharacters": 299,
          "aiCharacters": 176,
          "percentage": 59,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                    account?.loginid === client.loginid\n                        ? parseFloat(client.balance || '0').toFixed(getDecimalPlaces(account.currency))\n                        : parseFloat('0').toFixed(getDecimalPlaces(account.currency))\n        localStorage.setItem('session_token', token);"
        },
        {
          "name": "src/components/layout/header/header.tsx",
          "totalCharacters": 603,
          "aiCharacters": 127,
          "percentage": 21,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    const { data: activeAccount } = useActiveAccount({\n        allBalanceData: client?.all_accounts_balance,\n        directBalance: client?.balance,\n    });\n                    {isDesktop && (\n                        <Button\n                            className='header__logout-button'\n                            onClick={() => {\n                                client?.logout?.();\n                            }}\n                            tertiary\n                        >\n                      ..."
        },
        {
          "name": "src/components/layout/header/mobile-menu/use-mobile-menu-config.tsx",
          "totalCharacters": 632,
          "aiCharacters": 145,
          "percentage": 23,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    LegacyLogout1pxIcon,\n\n                    label: localize('Hub'),\n                ...(is_logged_in\n                    ? [\n                          {\n                              as: 'button' as const,\n                              label: localize('Log out'),\n                              LeftComponent: LegacyLogout1pxIcon,\n                              onClick: () => {\n                                  client?.logout?.();\n                              },\n                          },\n     ..."
        },
        {
          "name": "src/external/bot-skeleton/services/api/api-base.ts",
          "totalCharacters": 3843,
          "aiCharacters": 730,
          "percentage": 19,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "\n        this.handleTokenExchangeIfNeeded();\n    }\n\n    private async handleTokenExchangeIfNeeded() {\n        // Check URL directly for one-time token (no localStorage needed)\n        const urlParams = new URLSearchParams(window.location.search);\n        const oneTimeToken = urlParams.get('token');\n\n        if (oneTimeToken) {\n            // Remove token from URL immediately for security\n            const url = new URL(window.location.href);\n            url.searchParams.delete('token');\n        ..."
        },
        {
          "name": "src/external/bot-skeleton/services/api/appId.js",
          "totalCharacters": 56,
          "aiCharacters": 52,
          "percentage": 93,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    const token = localStorage.getItem('session_token');"
        },
        {
          "name": "src/hooks/api/account/useActiveAccount.tsx",
          "totalCharacters": 679,
          "aiCharacters": 536,
          "percentage": 79,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "const useActiveAccount = ({\n    allBalanceData,\n    directBalance,\n}: {\n    allBalanceData: Balance | null;\n    directBalance?: string;\n}) => {\n                  balance: currentBalanceData?.balance\n                      ? addComma(currentBalanceData.balance.toFixed(getDecimalPlaces(currentBalanceData.currency)))\n                      : directBalance\n                        ? addComma(parseFloat(directBalance).toFixed(getDecimalPlaces(activeAccount.currency)))\n                        : addComma(..."
        },
        {
          "name": "src/stores/client-store.ts",
          "totalCharacters": 1903,
          "aiCharacters": 723,
          "percentage": 38,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { api_base, observer } from '@/external/bot-skeleton';\nimport type RootStore from './root-store';\n    private authDataSubscription: { unsubscribe: () => void } | null = null;\n    private root_store: RootStore;\n\n    removeTokenFromUrl() {\n        const url = new URL(window.location.href);\n        if (url.searchParams.has('token')) {\n            url.searchParams.delete('token');\n            window.history.replaceState({}, document.title, url.toString());\n        }\n    }\n\n    storeSessionTok..."
        },
        {
          "name": "src/utils/auth-utils.ts",
          "totalCharacters": 91,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    localStorage.removeItem('session_token');\n    localStorage.removeItem('session_token');"
        }
      ],
      "timestamp": "2025-08-21T02:42:18.427Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "4",
      "branch": "core-auth-flow",
      "author": "prince-deriv",
      "prTitle": "Prince/ Authentication Flow",
      "hasAnalysis": true
    },
    {
      "percentage": 78,
      "totalCharacters": 1916,
      "aiCharacters": 1501,
      "files": [
        {
          "name": "src/app/app-content.jsx",
          "totalCharacters": 109,
          "aiCharacters": 55,
          "percentage": 50,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import useDevMode from '@/hooks/useDevMode';\n    // Initialize dev mode keyboard shortcuts\n    useDevMode();\n"
        },
        {
          "name": "src/hooks/useDevMode.ts",
          "totalCharacters": 1807,
          "aiCharacters": 1446,
          "percentage": 80,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { useEffect } from 'react';\nimport { botNotification } from '@/components/bot-notification/bot-notification';\nimport { APP_IDS } from '@/components/shared/utils/config/config';\nimport { LocalStorageConstants } from '@deriv-com/utils';\n\nconst DEV_SERVER_URL = 'qa197.deriv.dev';\nconst DEV_APP_ID = APP_IDS.LOCALHOST; // 36300\n\nconst useDevMode = () => {\n    const switchToDevServer = () => {\n        // Show connecting notification first\n        botNotification(`Connecting to dev server: ${DEV..."
        }
      ],
      "timestamp": "2025-08-20T12:58:14.037Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "11",
      "branch": "test-production-connector",
      "author": "prince-deriv",
      "prTitle": "chore: added quick dev mode toggle",
      "hasAnalysis": true
    },
    {
      "timestamp": "2025-08-20T08:57:51.165Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "9",
      "branch": "matin/disable_translation",
      "author": "matin-deriv",
      "prTitle": "chore: Disable Translation Workflow",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    },
    {
      "timestamp": "2025-08-20T06:44:20.066Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "6",
      "branch": "master",
      "author": "ashkan-deriv",
      "prTitle": "Claude Code",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    },
    {
      "percentage": 46,
      "totalCharacters": 2161,
      "aiCharacters": 992,
      "files": [
        {
          "name": "src/components/layout/footer/index.tsx",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "only-deletions",
          "hasAddedContent": false,
          "addedContent": ""
        },
        {
          "name": "src/components/layout/header/account-switcher.scss",
          "totalCharacters": 97,
          "aiCharacters": 85,
          "percentage": 88,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "\n.account-switcher-fixed {\n    pointer-events: none !important;\n    cursor: default !important;\n}"
        },
        {
          "name": "src/components/layout/header/account-switcher.tsx",
          "totalCharacters": 1861,
          "aiCharacters": 856,
          "percentage": 46,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    const { ui, client } = useStore();\n    // Removed is_stop_button_visible as UIAccountSwitcher is now always disabled\n                <div className='account-switcher-fixed'>\n                    <UIAccountSwitcher\n                        activeAccount={activeAccount}\n                        isDisabled={true} // Force disabled to prevent interactions\n                        tabsLabels={tabs_labels}\n                        modalContentStyle={{\n                            content: {\n            ..."
        },
        {
          "name": "src/components/layout/header/header-config.tsx",
          "totalCharacters": 132,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "import { LegacyHomeNewIcon as TradershubLogo, LegacyReportsIcon as ReportsLogo } from '@deriv/quill-icons/Legacy';\n    label: 'Hub',"
        },
        {
          "name": "src/components/layout/header/header.scss",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "only-deletions",
          "hasAddedContent": false,
          "addedContent": ""
        },
        {
          "name": "src/components/layout/header/header.tsx",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "only-deletions",
          "hasAddedContent": false,
          "addedContent": ""
        },
        {
          "name": "src/components/layout/header/mobile-menu/__tests__/menu-content.spec.tsx",
          "totalCharacters": 55,
          "aiCharacters": 51,
          "percentage": 93,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "    it('renders MenuItem components correctly', () => {"
        },
        {
          "name": "src/components/layout/header/mobile-menu/menu-content.tsx",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "only-deletions",
          "hasAddedContent": false,
          "addedContent": ""
        },
        {
          "name": "src/components/layout/header/mobile-menu/use-mobile-menu-config.tsx",
          "totalCharacters": 16,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "\n            [],"
        }
      ],
      "timestamp": "2025-08-20T04:09:52.975Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "1",
      "branch": "mvp-cleanup",
      "author": "prince-deriv",
      "prTitle": "Prince/ MVP Cleanup ",
      "hasAnalysis": true
    },
    {
      "timestamp": "2025-08-19T10:05:03.921Z",
      "repository": "deriv-com/derivatives-bot",
      "pullRequest": "2",
      "branch": "matin/initial_pr",
      "author": "matin-deriv",
      "prTitle": "Matin/Update CODEOWNERS file and GH Workflows",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    },
    {
      "percentage": 0,
      "totalCharacters": 689,
      "aiCharacters": 0,
      "files": [
        {
          "name": ".husky/pre-commit",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "only-deletions",
          "hasAddedContent": false,
          "addedContent": ""
        },
        {
          "name": ".husky/pre-push",
          "totalCharacters": 263,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "\n\n# 🗑️ EARLY EXIT: Check for delete operations at shell level\nif ps aux | grep -v grep | grep -q \"git.*push.*--delete\"; then\n  exit 0\nfi\n\n# Check command line arguments in current process tree\nif pgrep -f \"git.*push.*--delete\" > /dev/null 2>&1; then\n  exit 0\nfi\n"
        },
        {
          "name": "package-lock.json",
          "totalCharacters": 383,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                \"@deriv-com/shiftai-cli\": \"^0.0.4\",\n            \"version\": \"0.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/@deriv-com/shiftai-cli/-/shiftai-cli-0.0.4.tgz\",\n            \"integrity\": \"sha512-xR9z3//S+ngntBjZRVlvZhUXZdHFFkMCr50bW0e/lZ17wcQo19B02ouJnS4cEf3MrOx7Tx4chvGDaniyQnjGXQ==\",\n                \"shai\": \"bin/shai\",\n                \"shai-dev\": \"bin/shai\""
        },
        {
          "name": "package.json",
          "totalCharacters": 43,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        \"@deriv-com/shiftai-cli\": \"^0.0.4\","
        }
      ],
      "timestamp": "2025-08-18T14:15:54.938Z",
      "repository": "deriv-com/bot",
      "pullRequest": "551",
      "branch": "update-shiftai-version",
      "author": "prince-deriv",
      "prTitle": "chore: update shiftai-cli version",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 413,
      "aiCharacters": 0,
      "files": [
        {
          "name": "package-lock.json",
          "totalCharacters": 343,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                \"@deriv-com/shiftai-cli\": \"^0.0.3\",\n                \"husky\": \"^7.0.4\",\n            \"version\": \"0.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/@deriv-com/shiftai-cli/-/shiftai-cli-0.0.3.tgz\",\n            \"integrity\": \"sha512-Pxnxw4TIdWdRL320lif2MYyhGfXe/1NH+fDOXkptfLY31yXM7CU8Eup9bgIa3pRqHriID5KHHdaJmUbQGRihVg==\","
        },
        {
          "name": "package.json",
          "totalCharacters": 70,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        \"@deriv-com/shiftai-cli\": \"^0.0.3\",\n        \"husky\": \"^7.0.4\","
        }
      ],
      "timestamp": "2025-08-18T10:52:04.562Z",
      "repository": "deriv-com/bot",
      "pullRequest": "545",
      "branch": "shiftai-version-update",
      "author": "prince-deriv",
      "prTitle": "chore: update shiftai-cli version",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 27276,
      "aiCharacters": 0,
      "files": [
        {
          "name": ".husky/post-commit",
          "totalCharacters": 201,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "#!/bin/sh\n. \"$(dirname \"$0\")/_/husky.sh\"\n\n# ShiftAI Post-commit Hook - Display AI analysis table\nnpx @deriv-com/shiftai-cli hook post-commit\n\n# Preserve exit code (don't block if analysis fails)\nexit 0"
        },
        {
          "name": ".husky/pre-commit",
          "totalCharacters": 129,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "\n# ShiftAI Pre-commit Hook - Detect and strip AI markers\nnpx @deriv-com/shiftai-cli hook pre-commit\n\n# Preserve exit code\nexit $?"
        },
        {
          "name": ".husky/pre-push",
          "totalCharacters": 676,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "#!/bin/sh\n. \"$(dirname \"$0\")/_/husky.sh\"\n\n# ShiftAI Pre-push Hook - Intercept push for AI analysis and PR management\n# Git pre-push hook passes: $1=remote_name, $2=remote_url\nexport GIT_PUSH_REMOTE_NAME=\"$1\"\nexport GIT_PUSH_REMOTE_URL=\"$2\"\n\n# Capture original git push command arguments from parent process  \n# Get current branch for more reliable fallback\nCURRENT_BRANCH=\"$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo 'HEAD')\"\nexport GIT_PUSH_ORIGINAL_COMMAND=\"$(ps -o args= -p $PPID 2>/dev/..."
        },
        {
          "name": "package-lock.json",
          "totalCharacters": 26225,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "                \"@deriv-com/shiftai-cli\": \"^0.0.2\",\n        \"node_modules/@deriv-com/shiftai-cli\": {\n            \"version\": \"0.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/@deriv-com/shiftai-cli/-/shiftai-cli-0.0.2.tgz\",\n            \"integrity\": \"sha512-0700l/+mABSk8BfyXli9udcJMTzcbqr+6cUZxM+I1vo7CljzThQi2padF9Nq1puAiZTKMDj7UhcXvt5oMpT9FQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"boxen\": \"^5.1.2\",\n                \"chalk..."
        },
        {
          "name": "package.json",
          "totalCharacters": 45,
          "aiCharacters": 0,
          "percentage": 0,
          "status": "modified",
          "hasAddedContent": true,
          "addedContent": "        \"@deriv-com/shiftai-cli\": \"^0.0.2\",\n}"
        }
      ],
      "timestamp": "2025-08-18T08:05:35.208Z",
      "repository": "deriv-com/bot",
      "pullRequest": "543",
      "branch": "add-shiftai-p2",
      "author": "prince-deriv",
      "prTitle": "Prince/ added githooks shiftai",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 850,
      "aiCharacters": 0,
      "files": [
        {
          "name": "src/external/bot-skeleton/services/api/api-base.ts",
          "totalCharacters": 130,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "                setIsAuthorizing(false);\n            // this.getSelfExclusion(); commented this so we dont call it from two places"
        },
        {
          "name": "src/stores/self-exclusion-store.ts",
          "totalCharacters": 720,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            try {\n                const response = await api_base.api.getSelfExclusion();\n                const { get_self_exclusion }: { get_self_exclusion: { max_losses?: number } } = response;\n    ..."
        }
      ],
      "timestamp": "2025-08-14T04:06:21.848Z",
      "repository": "deriv-com/bot",
      "pullRequest": "536",
      "branch": "Rupato/Fix--self-exclusion",
      "author": "rupato-deriv",
      "prTitle": "Rupato/fix  self exclusion",
      "hasAnalysis": true
    },
    {
      "timestamp": "2025-08-06T12:54:02.278Z",
      "repository": "deriv-com/bot",
      "pullRequest": "533",
      "branch": "add-ai-worflows",
      "author": "prince-deriv",
      "prTitle": "Prince/ added ai analysis workflows",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    }
  ]
}